name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:

  format:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - id: checkout
        name: Checkout Repository
        uses: actions/checkout@v4

      - id: setup
        name: Setup Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      # - id: cache
      #   name: Enable Workflow Cache
      #   uses: Swatinem/rust-cache@v2

      - id: format
        name: Run Formatting-Checks
        run: cargo fmt --check

  unit:
    name: Units
    runs-on: ubuntu-latest
    needs: check

    strategy:
      matrix:
        toolchain: [stable]

    steps:
      - id: checkout
        name: Checkout Repository
        uses: actions/checkout@v4


      - id: setup
        name: Setup Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview
      
      # - id: cache
      #   name: Enable Job Cache
      #   uses: Swatinem/rust-cache@v2

      - id: tools
        name: Install Tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov, cargo-nextest

      
      - id: pretty-test
        name: Run cargo pretty-test
        run: |
          cargo install --path .
          cargo pretty-test -F "colored/no-color" --color=always
          echo '```text' >> $GITHUB_STEP_SUMMARY
          echo "$(cargo pretty-test -F "colored/no-color" --color=never)" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY